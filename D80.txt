														D80 16-JUNE-24
mdevops24.online
tallapu.mohan@gmail.com
=========D80-2024-06-24-SESSION-07=============roboshop-Manul====
Roboshop Setup …
NTB-New to Bank
ETB-Existing to bank
=========D80-2024-06-25-SESSION-08
01.Frontend  Nginx
02.MongoDB     ——>#mongosh  —show databases
				    shipping#mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pRoboShop@1 ;sql>show databses
set-prompt mongodb
=========D80-2024-06-26-SESSION-09====roboshop-Manul======
03.Catalogue  nodejs
04.redis for cache
05.User.  Nodes
06.cart   nodes
=========D80-2024-06-27-SESSION-10=======roboshop-Manul====
07.MySQL.   (app-user.sql use mysql_native_password)
08.Shipping. java
=========D80-2024-06-28-SESSION-11====roboshop-Manul=====
09-RabbitMQ   transaction(kafka/ActiveMQ alternative)
     # First ".*" for configure permission on every entity
     # Second ".*" for write permission on every entity
     # Third ".*" for read permission on every entity
rabbitmqctl set_permissions -p "custom-vhost" "username" ".*" ".*" ".*"
10.payment Python
11.Dispatch GoLang
Problems in normal roboshop project
=========D80-2024-07-02-SESSION-12=====roboshop-Shell=====
Automation using Shell
Leanrn-shell
=========D80-2024-07-03-SESSION-13======roboshop-Shell=====
Roboshop-shell
01.Frontend  Nginx
02.MongoDB
03.Catalogue  nodejs
SED Editor options
04.redis for cache
05.User.  Nodes
=========D80-2024-07-04-SESSION-14=====roboshop-Shell======
DNS update in frontend AWS Route53
mdevops24.online…in DEV,QA,PROD

1.Update <MS>.dev.mdevops24.online in all configuration files

		fe.dev.mdevops24.online
		cart.dev.mdevops24.online
		catalogue.dev.mdevops24.online
		dispatch.dev.mdevops24.online
		mongo.dev.mdevops24.online
		mysql.dev.mdevops24.online
		payment.dev.mdevops24.online
		rabbitmq.dev.mdevops24.online
		redis.dev.mdevops24.online
		shipping.dev.mdevops24.online
		user.dev.mdevops24.online

Mrakmonitor Inc. famous DNS service…

06.cart   nodes
07.MySQL.
09-RabbitMQ
10.payment Python
11.Dispatch GoLang
=========D80-2024-07-05-SESSION-15======roboshop-Shell=====
Fine tuning roboshop-shell
Non Functional Requirements: NFR
	Keep code DRY…
	Don’t expose user/pwds
	Re-run of code should not fail
Learn-shell 2.Functions.sh
Common.sh in roboshop-shell
	nodejs(),component=
Learn-shell 3.variables.sh
	# Variable names can have alphabets, numbers and _ (Same for Function also)
	# Variable name styles. Ex: variable name is coursename
	# CamelCase - courseName
	# PascalCase - CourseName
	# snake case - course_name
	# UNIX Way ( Later Linux) - COURSE_NAME
Redirectors  &>> (append all)
			1> only log
			2> error only
=========D80-2024-07-06-SESSION-16=====***====roboshop-Shell=====
Learn-shell  04.print.sh
&>/dev/null
Exit status 0 / 1
$? -eq 0.
    Expressions : Numbers -eq,-ne-lt
			      String ==,!=,-z
			      File -e /opt/file…chk if file exits
STAT $? ==>if [$1 -eq 0] here only one argument which is $1
Code colouring
Practice—-rabbitmq,payment,dispatch
=========D80-2024-07-08-SESSION-17=========roboshop-Ansible=====
Learn-shell  05.quotes
Learn-shell  06.Loops

Declarative Vs Imperative:
Shell is Imperative and homogeneous
Ansible (written in python) 2.17(core)v10(rhel)
Sudo dnf list | grep ansible
YAML(Yet Another Markup Language)
=========D80-2024-07-09-SESSION-18======roboshop-Ansible======
Ansible Roles—>task—>playS(playbook)—>module/collection
	Frontend
	Mongo
	Catalogue
=========D80-2024-07-10-SESSION-19====***===roboshop-Ansible=====
Run.sh or make file to run ansible commands
Env Setup: DEV QA UAT PROD
Dev environment define @23:00
Files-->templates * @30:00
	all files(configuration files) changed to templates      **if templates—>module is template
													**if files————>module is copy
	Redis  —meta(dependencies) run this before
		replacing a line need lineinfile module @38:00
	User
	Cart
	MySQL
@1:10*Shipping —>group tasks block, Loop
Role dependencies @42:00 for set-prompt

=========D80-2024-07-11-SESSION-20=====**====roboshop-Ansible=====
 RabbitMQ
Payment
Dispatch
	# Variables precedence. Facts,register, inventory
	# 1. CLi -e variable
	# 2. tasks
	# 3. roles vars
	# 4. vars_files
	# 5. vars
	# 6. roles defaults

	# Variable types
		# 1. simple variable
		# 2. List
		# 3. Dictionary / Map
Ansible Certificate Topics:
inventory ansible -I inventory <groupName> ;dynamic inventory in aws topic
Facts: collect n store variables; eg:Gathering facts ansible facts…
Configuration file: ansible.cfg
Redirect o/p in ansible: register Variable to retrieve the results of running commands
ignore_errors: yes
vault.yml
Data Types: String,Boolean,
=========D80-2024-07-12-SESSION-21=========
Recap of Session-20
General Ansible topics
Terraform—-IaaS  acquired by IBM
	The real difference is that Terraform has shifted to a Business Source License (BSL), and OpenTofu is published under the open-source Mozilla Public License (MPL).
=========D80-2024-07-13====Break=====
=========D80-2024-07-15-SESSION-22============roboshop-Terraform=====
 Terraform: HCL(HashiCorp Configuration Language)  .tf only
Providers—>Resources—code is in blocks{}
      Blocks offered by TF are:7 resource,varibale,output,data,local,module,provider(was,azure,gcp,github etc…)
Resource “abc” “xyz” {
X = 10
Y = 20
}
abc=resource label by provider
xyz=local name by our own name
S,y=argument
10,20=inputs
Init——>plan——>apply——>destroy…

How TF talks to AWS=apply—>role—>aws
AWS—IAM—Roles—Create role
W.Station(right click)—security—IAM—attach
Variables:
=========D80-2024-07-16-SESSION-23=======**====roboshop-Terraform===
Roboshop-v2 :variable declarations,
Data source(jus get data from aws) data.tf
	Tf won’t execute variable in top to bottom…cn declare any wr.
	Variables continue: ami,sg,zone id,
data_blocks :
Loops: count, maps(for_each)
Conditions—pick a value not abt running a block
Module:(functions) collection of .tf files
		root>>child>>published,
=========D80-2024-07-17-No SESSION=========
=========D80-2024-07-18-SESSION-24=======roboshop-Terraform=====
09-Module-2
	use one module o/p and send to another module as I/p and use
 terraform.tfstate store the resource information.
	terraform apply=>code>stateFile>CloudState
Stores in a DB
	Postgres database…
	in S3 for AWS
		create in S3—>d80-terraform
10.remote-state
Roboshop-terraform: create dev, prod envs
 	run.sh or Makefile
Provisioners: to model specific actions on the local machine
	File,local-exec,remote-exec
	inline is used to exec.  —>ansible-pull
     Created fe, mongo, catalogue
=========D80-2024-07-19-SESSION-25======roboshop-Terraform+GitHubAction*======
Tf done in fe,mongo,ctatalogue manually
With Pipeline—>GitHub Actions(for infra CD)
				create the .github/workflows/ directory to store your workflow files
Org—>Runner grps—>Repository Allow public
Needs: to create dependencies on jobs
Tf init need credentials setup:

Create own Runner fr gitHub:
	>manual way created runner
	@51:00>with gitHubAction >settings>runners>new runner>
        @1:07:00 integrate was with GitHub actions for credentials
	1.create GitHub runner from workstation using terraform init from tools-automation-code
=========D80-2024-07-20-SESSION-26======roboshop-Terraform+GitHubAction*=====***=do=
Setup —self runner—token generation(dynamically)
@50:00 fresh setup
workstation ~/tools-autoamtion-code# git pull; ansible-playbook -i github-runner-internal.mdevops24.online, tool-setup.yml -e ansible_user=ec2-user -e ansible_password=DevOps321 -e tool_name=github-runner
In gitlab-runner$./run.sh
 ./svc.sh to start runner service @1:02:00 all the time
=========D80-2024-07-22-SESSION-27======roboshop-Terraform+GitHubAction*=====***=do==repeat
Attach IAM role to gihub-runner >add infrs-create>iam.tf
Deploy in ends.
Deploy in env. By approvals >protection rule=settings>rules>New env.*
pwd management tool Vault: installation/integration @48:00
Spot instance: creation @60:00 >persistent>stop

@1:21:00 workstation#git pull;ansible-playbook -i github-runner-internal.mdevops24.online, tool-setup.yml -e ansible_user=ec2-user -e ansible_password=DevOps321 -e tool_name=github-runner

@1:25:00. ansible-playbook -i vault-internal.mdevops24.online, tool-setup.yml -e ansible_user=ec2-user -e ansible_password=DevOps321 -e tool_name=vault
=========D80-2024-07-23-SESSION-28======roboshop-Terraform+GitHubAction*=====***==do-Later=
Chk runner online/offline
Full run @15:00
Vault connection

=========D80-2024-07-24-SESSION-29======roboshop-Terraform+GitHubAction*=====***==do-Later=

Vault connection
*Unseal +update dns for vault after server restart
Update vault for all roboshop-ansible components


=======D80-2024-07-25-SESSION-30=====n/w=====
N/w concepts/ Landing Zone further move to Containerisation
VPC
    subnet
Landing Zone
=======D80-2024-07-26-SESSION-31=====n/w=====
Route tables
=======D80-2024-07-27-SESSION-32==========
Ec2 web instances
Launch template
Create aws_auto_scaling group
Create db instance
User data code in aws











