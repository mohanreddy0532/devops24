														D80 16-JUNE-24
mdevops24.online
tallapu.mohan@gmail.com
=========D80-2024-06-24-SESSION-07=================
Roboshop Setup …
NTB-New to Bank
ETB-Existing to bank
=========D80-2024-06-25-SESSION-08
01.Frontend  Nginx
02.MongoDB     ——>#mongosh  —show databases
set-prompt mongodb
=========D80-2024-06-26-SESSION-09
03.Catalogue  nodejs
04.redis for cache
05.User.  Nodes
06.cart   nodes
=========D80-2024-06-27-SESSION-10
07.MySQL.   (app-user.sql use mysql_native_password)
08.Shipping. java
=========D80-2024-06-28-SESSION-11
09-RabbitMQ   transaction(kafka/ActiveMQ alternative)
     # First ".*" for configure permission on every entity
     # Second ".*" for write permission on every entity
     # Third ".*" for read permission on every entity
rabbitmqctl set_permissions -p "custom-vhost" "username" ".*" ".*" ".*"
10.payment Python
11.Dispatch GoLang
Problems in normal roboshop project
=========D80-2024-07-02-SESSION-12=====Shell=
Automation using Shell
Leanrn-shell
=========D80-2024-07-03-SESSION-13======
Roboshop-shell
01.Frontend  Nginx
02.MongoDB
03.Catalogue  nodejs
SED Editor options
04.redis for cache
05.User.  Nodes
=========D80-2024-07-04-SESSION-14======
DNS update in frontend AWS Route53
mdevops24.online…in DEV,QA,PROD

1.Update <MS>.dev.mdevops24.online in all configuration files

		fe.dev.mdevops24.online
		cart.dev.mdevops24.online
		catalogue.dev.mdevops24.online
		dispatch.dev.mdevops24.online
		mongo.dev.mdevops24.online
		mysql.dev.mdevops24.online
		payment.dev.mdevops24.online
		rabbitmq.dev.mdevops24.online
		redis.dev.mdevops24.online
		shipping.dev.mdevops24.online
		user.dev.mdevops24.online

Mrakmonitor Inc. famous DNS service…

06.cart   nodes
07.MySQL.
09-RabbitMQ
10.payment Python
11.Dispatch GoLang
=========D80-2024-07-05-SESSION-15======
Fine tuning roboshop-shell
Non Functional requirements:
	Keep code DRY…
	Don’t expose user/pwds
	Re-run of code should not fail
Learn-shell 2.Functions.sh
Common.sh in roboshop-shell
	nodejs(),component=
Learn-shell 3.variables.sh
	# Variable names can have alphabets, numbers and _ (Same for Function also)
	# Variable name styles. Ex: variable name is coursename
	# CamelCase - courseName
	# PascalCase - CourseName
	# snake case - course_name
	# UNIX Way ( Later Linux) - COURSE_NAME
Redirectors  &>> (append all)
			1> only log
			2> error only
=========D80-2024-07-06-SESSION-16=====***====
Learn-shell  04.print.sh
&>/dev/null
Exit status 0 / 1
$? -eq 0.
    Expressions : Numbers -eq,-ne-lt
			      String ==,!=,-z
			      File -e /opt/file…chk if file exits
STAT $? ==>if [$1 -eq 0] here only one argument which is $1
Code colouring
Practice—-rabbitmq,payment,dispatch
=========D80-2024-07-08-SESSION-17=========
Learn-shell  05.quotes
Learn-shell  06.Loops

Declarative Vs Imperative:
Shell is Imperative and homogeneous
Ansible (written in python) 2.17(core)v10(rhel)
Sudo dnf list | grep ansible
YAML(Yet Another Markup Language)
=========D80-2024-07-08-SESSION-18=========
Ansible Roles—>task—>playS(playbook)—>module/collection
	Frontend
	Mongo
	Catalogue

